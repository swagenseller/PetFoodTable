{"version":3,"sources":["components/Footer.js","components/ModBody.js","components/ModalContent.js","components/App.js","index.js"],"names":["Footer","props","title","Modal","Button","variant","onClick","onClose","edit","delete","ModBody","display","type","maxLength","minLength","name","value","selectRow","onChange","handleChange","brand","pet","step","max","min","price","Table","striped","bordered","size","Body","message","ModalContent","onResponse","onDelete","rowToEdit","iRowToEdit","newRow","Object","create","state","onEdit","bind","this","setTitle","event","currentState","target","setState","console","log","ReactDOM","createPortal","show","isOpen","onHide","Header","closeButton","Title","document","body","Component","columns","key","width","editable","sortable","sortDescendingFirst","initRows","App","onGridRowsUpdated","fromRow","toRow","updated","rows","slice","i","getCellActions","column","row","cellActions","icon","className","callback","index","indexOf","iRowIndex","initialRows","sortRows","sortColumn","sortDirection","sort","a","b","toUpperCase","parseRows","temp","rowIndex","splice","iRows","newRows","rowGetter","rowsCount","length","enableCellsSelect","onGridSort","React","root","querySelector","render"],"mappings":"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","file":"static/js/main.43dbfd15.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Modal} from 'react-bootstrap';\n\n// displays the Modal.Footer buttons based on props.title\nconst Footer = (props) => {\n    if(props.title ===\"edit\"){\n        return(\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onClose}>cancel</Button>\n                <Button variant=\"primary\" onClick={props.edit}>Edit</Button>\n            </Modal.Footer>\n        );\n    } else if(props.title ===\"delete\"){\n        return(\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onClose}>cancel</Button>\n                <Button variant=\"danger\" onClick={props.delete}>delete</Button>\n            </Modal.Footer>\n        );\n    } else{\n        // change with an error message?\n        return null;\n    }\n   \n}\n\n\nexport default Footer; \n\n","import React from 'react';\nimport { Table , Modal} from 'react-bootstrap';\n\n// displays the Modal.Footer buttons based on props.title\nconst ModBody= (props) => {\n    let display = null;\n    if(props.title === 'edit'){\n      display = (\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t<span variant=\"primary\">Name:</span>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tmaxLength=\"100\" \n\t\t\t\t\t\t\tminLength=\"1\" \n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tvalue={props.selectRow.name}\n\t\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span>Brand:</span>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tmaxLength=\"100\" \n\t\t\t\t\t\t\tminLength=\"1\" \n\t\t\t\t\t\t\tname=\"brand\"\n\t\t\t\t\t\t\tvalue={props.selectRow.brand}\n\t\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span>Pet:  </span>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\"  \n\t\t\t\t\t\t  maxLength=\"10\" \n\t\t\t\t\t\t\tminLength=\"1\"\n\t\t\t\t\t\t\tname=\"pet\"\n\t\t\t\t\t\t\tvalue={props.selectRow.pet}\n\t\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<span>Price:</span>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"number\" \n\t\t\t\t\t\t\t\tstep=\"0.01\" \n\t\t\t\t\t\t\t\tmax=\"999.99\" \n\t\t\t\t\t\t\t\tmin=\"0\" \n\t\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\t\tvalue={props.selectRow.price}\n\t\t\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\t\n\t\t\t\t</ul>\n\t\t\t);\n    } else if (props.title === 'delete'){\n\t\t\tdisplay = (\n\t\t\t\t<Table striped bordered size=\"sm\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t<th>Brand Name</th>\n\t\t\t\t\t\t\t<th>Food For</th>\n\t\t\t\t\t\t\t<th>Price</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\t\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{props.selectRow.name}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{props.selectRow.brand}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{props.selectRow.pet}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{props.selectRow.price}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<Modal.Body>\n\t\t\t\t<p>{props.message}</p>\n\t\t\t\t{display}\n\t\t\t</Modal.Body>\n\t\t);\n};\n\nexport default ModBody;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Modal, Table } from 'react-bootstrap';\nimport Footer from './Footer';\nimport ModBody from './ModBody';\n\n// will need to refactor this\n\nclass ModalContent extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\t//this.setTitle = this.setTitle.bind(this);\n\t\tthis.state = {\n\t\t\ttitle: '',\n\t\t\tmessage: null,\n\t\t\tselectRow: this.props.selectRow\n\t\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this);\n\n\t}\n\tcomponentDidMount(){\n\t\tthis.setTitle();\n\t}\n\t\n\n\t/*componentDidUpdate(prevProps){\n\t\tif(this.props.isOpen !== prevProps.isOpen){\n\t\t\tthis.setTitle();\n\t\t}\n\t}*/\n\n\n\thandleChange(event){ \n\t\n\t\tconst {selectRow} = {...this.state};\n\t\tconst currentState = selectRow;\n\t\tconst {name, value} = event.target;\n\t\tcurrentState[name] = value;\n\t\tthis.setState({selectRow: currentState});\n\t}\n\t\n\t// sets the state for Modal depending on whether the user clicked \n\t// edit or delete button\n\tsetTitle(){\n\t\t\n\t\tconsole.log(this.state.selectRow);\n\t\tif(this.props.title === \"edit\") {\n\t\t\tthis.setState({\n\t\t\t\ttitle: \"Edit Row\",\n\t\t\t\tmessage: null,\n\t\t\t});\n\t\t} else if (this.props.title === \"delete\"){\n\t\t\tthis.setState({\n\t\t\t\ttitle: \"Delete Row\", \n\t\t\t\tmessage: \"Are you sure you want to delete this row?\",\n\t\t\t});\n\t\t}\n\t}\n\n\t// tells parent App.js to close the Modal\n\tonClose = () => {\n\t\tthis.props.onResponse();\n\n\t}\n\n\t// tells parent App.js to delete the row\n\tdelete = () => {\n\t\tthis.props.onDelete(this.props.rowToEdit, this.props.iRowToEdit);\n\t}\n\n\t// tells parent App.js to edit the row\n\tedit = () => {\n\t\tconst newRow = Object.create(this.state.selectRow);\n\t\tthis.props.onEdit(this.props.rowToEdit, this.props.iRowToEdit, newRow);\n\t}\n\n\t// need to refactor\n\trender() {\n\t\treturn ReactDOM.createPortal(\n\t\t\t<aside>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.props.isOpen}\n\t\t\t\t\tonHide={this.onClose}\n\t\t\t\t>\n\t\t\t\t\t<Modal.Header closeButton onClick={this.onClose}>\n\t\t\t\t\t\t<Modal.Title>{this.state.title}</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\n\t\t\t\t\t<ModBody\n\t\t\t\t\t\ttitle={this.props.title}\n\t\t\t\t\t\tselectRow={this.state.selectRow}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tmessage={this.state.message}\n\t\t\t\t\t/>\n\t\t\t\t\t<Footer \n\t\t\t\t\t\tonClose={this.onClose} \n\t\t\t\t\t\tedit={this.edit} \n\t\t\t\t\t\tdelete={this.delete}\n\t\t\t\t\t\ttitle={this.props.title} \n\t\t\t\t\t/>\t\n\t\t\t\t</Modal>\n\t\t\t\t\t\n\t\t\t</aside>,\n\t\t\tdocument.body\n\t\t);\n\n\t} \n} \n\n\nexport default ModalContent;","import React from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport ReactDOM from 'react-dom';\nimport './../theme.css'\nimport ModalContent from './ModalContent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n// come up with a away to not be hard coding this\nconst columns = [\n    { key: \"edit\", name: \"\", width: 100, editable: true, sortable: false  },\n    { key: \"name\", name: \"Name\", editable: true, sortable: true, sortDescendingFirst: true },\n    { key: \"brand\", name: \"Brand Name\", sortable: true, editable: true},\n    { key: \"pet\", name: \"Food For\", editable: true, sortable: true },\n    { key: \"price\", name: \"Price\", editable: true, sortable: true }\n  ];\n  \n  const initRows =  [\n    { name: \"minichunks\", brand: \"Lambs\", pet: \"dogs\", price: 3 },\n    {\n      name: \"HE Thinks he is people\",\n      brand: \"Archer\",\n      pet: \"ocelots\",\n      price: 20\n    },\n    { name: \"Wilderness\", brand: \"Blue Beef\", pet: \"dogs\", price: 7 },\n    { name: \"carrots\", brand: \"N/A\", pet: \"rabbits\", price: 2 },\n    { name: \"Shrimpy Shrimp\", brand: \"Venus\", pet: \"cats\", price: 6 },\n    { name: \"sea flakes\", brand: \"Krill\", pet: \"fish\", price: 3 }\n  ];\n\n  \n  \n  class App extends React.Component {\n    constructor(props){\n      super(props);\n\n      this.state = {\n        rows: initRows,\n        initialRows : initRows,\n        isOpen: false,\n        selectRow: null,\n        rowToEdit: null,\n        iRowToEdit: null,\n        title: '',\n        \n      };\n    }\n    onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\n      this.setState((state) => {\n        const rows = state.rows.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n          rows[i] = { ...rows[i], ...updated };\n        }\n        return rows;\n      });\n    };\n\n    /*componentDidUpdate(prevState){\n      \n\n    }*/\n    // no longer used, immediately deletes rows when icon clicked\n   /* getCellActions = (column, row) => {\n      const cellActions = [\n        {\n          icon: <span className=\"delete controls\"> Delete </span>,\n          callback: () => {\n            const rows = [...this.state.rows];\n            rows.splice(row.index, 1); \n            this.setState({ rows: rows });\n          }\n        }\n      ];\n      return column.key === \"edit\" ? cellActions : null;\n    }; */\n\n    getCellActions = (column, row) => {\n      const cellActions = [\n        {\n          icon: <span className=\"primary\">Edit</span>,\n          callback: () =>{\n            const index = this.state.rows.indexOf(row)\n            //console.log(\"index is: \" + index)\n            const iRowIndex = this.state.initialRows.indexOf(row)\n            this.setState({\n              isOpen: true,\n              selectRow: row,  \n              rowToEdit: index, \n              iRowToEdit: iRowIndex,\n              title: \"edit\"\n            });\n          }\n    \n        },\n        {\n          icon: <span className=\"danger\"> Delete </span>,\n          callback: () => {\n            const index = this.state.rows.indexOf(row)\n            //console.log(\"index is: \" + index)\n            const iRowIndex = this.state.initialRows.indexOf(row)\n            this.setState({\n              isOpen: true,\n              selectRow: row,  \n              rowToEdit: index, \n              iRowToEdit: iRowIndex,\n              title: \"delete\",\n               \n            });\n            \n          }\n        }\n\n      ]\n      return column.key === \"edit\" ? cellActions : null; \n    }\n\n\t\tsortRows = (sortColumn, sortDirection) =>  {\n\t\t\tconst initialRows = [...this.state.rows];\n\t\t\tconst comparer = (a, b) => {\n        if(typeof a[sortColumn] === \"string\"){\n          if (sortDirection === \"ASC\") {\n            return a[sortColumn].toUpperCase() > b[sortColumn].toUpperCase() ? 1 : -1;\n          } else if (sortDirection === \"DESC\") {\n            return a[sortColumn].toUpperCase() < b[sortColumn].toUpperCase() ? 1 : -1;\n          }\n        } else if (typeof a[sortColumn] === \"number\"){\n          if (sortDirection === \"ASC\") {\n            return a[sortColumn] > b[sortColumn] ? 1 : -1;\n          } else if (sortDirection === \"DESC\") {\n            return a[sortColumn] < b[sortColumn] ? 1 : -1;\n          }\n        }\n\t\t\t};\n\t\t\treturn sortDirection === \"NONE\" ? this.state.initialRows : [...initialRows].slice().sort(comparer);\n    };\n    \n    // working on method to display numbers as money (string)\n    // on\n    parseRows = (i) =>{\n      const temp = this.state.rows[i];\n      console.log(temp)  // can't return properties :(\n      //temp.price = \"$\" + temp.price; \n      return temp;\n    }\n\n    // need to rename\n    // closes the modal and resets the state \n    onResponse = () =>{\n      this.setState({\n        isOpen: false,\n        selectRow: null, \n        rowToEdit: null, \n        iRowToEdit: null,\n        title: '',\n      });\n    }\n\n   // removes the selected row from the table\n    onDelete = (rowIndex, iRowIndex) => {\n      // removes from this.state.rows\n      const rows = [...this.state.rows];\n      rows.splice(rowIndex, 1); \n      // removes from initialRows\n      const iRows = [...this.state.initialRows];\n      iRows.splice(iRowIndex, 1)\n      \n      this.setState({ \n        rows: rows, \n        initialRows: iRows,\n      });\n      this.onResponse();\n    }\n    \n    // takes to long for rerender to take effect?\n    // need to use Array.map to remap the arrays\n    onEdit = (rowIndex, iRowIndex, newRow) => {\n      const newRows = [...this.state.rows];\n\n      newRows[rowIndex] = newRow;\n      this.setState({rows: newRows})\n      //this.onGridRowsUpdated(rowIndex, rowIndex+1, newRow);\n      this.onResponse();\n      \n    }\n\n\n\n\t  \n    render() {\n      return (\n        <div>\n          <ReactDataGrid\n            columns={columns}\n            rowGetter= {i => this.state.rows[i]}\n            rowsCount={this.state.rows.length}\n            onGridRowsUpdated={this.onGridRowsUpdated}\n            enableCellsSelect={true}\n            getCellActions={this.getCellActions}\n            onGridSort= {(sortColumn, sortDirection) => this.setState({ rows: this.sortRows(sortColumn, sortDirection) }) }//{(sortColumn, sortDirection) => this.setState({ rows: this.test(sortColumn, sortDirection) }) }\n          />\n\n          {this.state.isOpen && <ModalContent\n              isOpen={this.state.isOpen}\n              onResponse={this.onResponse}\n              selectRow={this.state.selectRow}  \n              rowToEdit={this.state.rowToEdit}\n              iRowToEdit={this.state.iRowToEdit}\n              onDelete={this.onDelete}\n              title={this.state.title}\n              onEdit={this.onEdit}\n            />\n          }\n          \n          \n        </div>\n      );\n    }\n  }\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport ReactDataGrid from \"react-data-grid\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst root = document.querySelector('#root');\nReactDOM.render(<App />, root); "],"sourceRoot":""}